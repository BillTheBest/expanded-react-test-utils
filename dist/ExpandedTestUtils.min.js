/**
 * CSS Selector Parser
 * @author Marat Dulin <mdevils@yandex.ru>
 * @source https://github.com/mdevils/node-css-selector-parser
 * @license MIT
 */

define("CssSelectorParser", [], function() {
    function e() {
        this.pseudos = {}, this.attrEqualityMods = {}, this.ruleNestingOperators = {}, this.substitutesEnabled = !1;
    }
    var t, r, n, s, i, o, a, u, l, c, f;
    return e.prototype.registerSelectorPseudos = function(e) {
        var t, r;
        for (t = 0, r = arguments.length; r > t; t++) e = arguments[t], this.pseudos[e] = "selector";
        return this;
    }, e.prototype.unregisterSelectorPseudos = function(e) {
        var t, r;
        for (t = 0, r = arguments.length; r > t; t++) e = arguments[t], delete this.pseudos[e];
        return this;
    }, e.prototype.registerNestingOperators = function(e) {
        var t, r;
        for (t = 0, r = arguments.length; r > t; t++) e = arguments[t], this.ruleNestingOperators[e] = !0;
        return this;
    }, e.prototype.unregisterNestingOperators = function(e) {
        var t, r;
        for (t = 0, r = arguments.length; r > t; t++) e = arguments[t], delete this.ruleNestingOperators[e];
        return this;
    }, e.prototype.registerAttrEqualityMods = function(e) {
        var t, r;
        for (t = 0, r = arguments.length; r > t; t++) e = arguments[t], this.attrEqualityMods[e] = !0;
        return this;
    }, e.prototype.unregisterAttrEqualityMods = function(e) {
        var t, r;
        for (t = 0, r = arguments.length; r > t; t++) e = arguments[t], delete this.attrEqualityMods[e];
        return this;
    }, e.prototype.enableSubstitutes = function() {
        return this.substitutesEnabled = !0, this;
    }, e.prototype.disableSubstitutes = function() {
        return this.substitutesEnabled = !1, this;
    }, l = function(e) {
        return e >= "a" && "z" >= e || e >= "A" && "Z" >= e;
    }, u = function(e) {
        return e >= "a" && "z" >= e || e >= "A" && "Z" >= e || e >= "0" && "9" >= e || "-" === e || "_" === e;
    }, a = function(e) {
        return e >= "a" && "f" >= e || e >= "A" && "F" >= e || e >= "0" && "9" >= e;
    }, o = function(e) {
        return "=" === e || "^" === e || "$" === e || "*" === e || "~" === e;
    }, i = {
        "!": !0,
        '"': !0,
        "#": !0,
        $: !0,
        "%": !0,
        "&": !0,
        "'": !0,
        "(": !0,
        ")": !0,
        "*": !0,
        "+": !0,
        ",": !0,
        ".": !0,
        "/": !0,
        ";": !0,
        "<": !0,
        "=": !0,
        ">": !0,
        "?": !0,
        "@": !0,
        "[": !0,
        "\\": !0,
        "]": !0,
        "^": !0,
        "`": !0,
        "{": !0,
        "|": !0,
        "}": !0,
        "~": !0
    }, n = {
        n: "\n",
        r: "\r",
        t: "	",
        " ": " ",
        f: "\f",
        v: ""
    }, s = {
        "\n": "\\n",
        "\r": "\\r",
        "	": "\\t",
        " ": "\\ ",
        "\f": "\\f",
        "": "\\v"
    }, f = {
        "\n": "\\n",
        "\r": "\\r",
        "	": "\\t",
        "\f": "\\f",
        "": "\\v"
    }, c = {
        n: "\n",
        r: "\r",
        t: "	",
        f: "\f",
        "\\": "\\",
        "'": "'"
    }, r = {
        n: "\n",
        r: "\r",
        t: "	",
        f: "\f",
        "\\": "\\",
        '"': '"'
    }, t = function(e, t, s, o, f, h) {
        var p, d, g, m, y;
        return m = e.length, p = null, g = function(r, n) {
            var s, i, o;
            for (o = "", t++, p = e.charAt(t); m > t; ) {
                if (p === r) return t++, o;
                if ("\\" === p) if (t++, p = e.charAt(t), p === r) o += r; else if (s = n[p]) o += s; else {
                    if (a(p)) {
                        for (i = p, t++, p = e.charAt(t); a(p); ) i += p, t++, p = e.charAt(t);
                        " " === p && (t++, p = e.charAt(t)), o += String.fromCharCode(parseInt(i, 16));
                        continue;
                    }
                    o += p;
                } else o += p;
                t++, p = e.charAt(t);
            }
            return o;
        }, d = function() {
            var r, s, o;
            for (o = "", p = e.charAt(t); m > t; ) {
                if (u(p)) o += p; else {
                    if ("\\" !== p) return o;
                    if (t++, p = e.charAt(t), i[p]) o += p; else if (s = n[p]) o += s; else {
                        if (a(p)) {
                            for (r = p, t++, p = e.charAt(t); a(p); ) r += p, t++, p = e.charAt(t);
                            " " === p && (t++, p = e.charAt(t)), o += String.fromCharCode(parseInt(r, 16));
                            continue;
                        }
                        o += p;
                    }
                }
                t++, p = e.charAt(t);
            }
            return o;
        }, y = function() {
            var r;
            for (p = e.charAt(t), r = !1; " " === p || "	" === p || "\n" === p || "\r" === p || "\f" === p; ) r = !0, 
            t++, p = e.charAt(t);
            return r;
        }, this.parse = function() {
            var r;
            if (r = this.parseSelector(), m > t) throw Error('Rule expected but "' + e.charAt(t) + '" found.');
            return r;
        }, this.parseSelector = function() {
            var r, n;
            for (n = r = this.parseSingleSelector(), p = e.charAt(t); "," === p; ) {
                if (t++, y(), "selectors" !== r.type && (r = {
                    type: "selectors",
                    selectors: [ n ]
                }), n = this.parseSingleSelector(), !n) throw Error('Rule expected after ",".');
                r.selectors.push(n);
            }
            return r;
        }, this.parseSingleSelector = function() {
            var r, n, s, i;
            if (y(), i = {
                type: "ruleSet"
            }, s = this.parseRule(), !s) return null;
            for (r = i; s && (s.type = "rule", r.rule = s, r = s, y(), p = e.charAt(t), !(t >= m || "," === p || ")" === p)); ) if (f[p]) {
                if (n = p, t++, y(), s = this.parseRule(), !s) throw Error('Rule expected after "' + n + '".');
                s.nestingOperator = n;
            } else s = this.parseRule(), s && (s.nestingOperator = null);
            return i;
        }, this.parseRule = function() {
            var n, i, a, f, v, E, C, A;
            for (C = null; m > t; ) if (p = e.charAt(t), "*" === p) t++, (C = C || {}).tagName = "*"; else if (l(p) || "\\" === p) (C = C || {}).tagName = d(); else if ("." === p) t++, 
            C = C || {}, (C.classNames = C.classNames || []).push(d()); else if ("#" === p) {
                for (t++, p = e.charAt(t), a = ""; u(p); ) a += p, t++, p = e.charAt(t);
                (C = C || {}).id = a;
            } else if ("[" === p) {
                if (t++, y(), n = {
                    name: d()
                }, y(), "]" === p) t++; else {
                    if (f = "", o[p] && (f = p, t++, p = e.charAt(t)), t >= m) throw Error('Expected "=" but end of file reached.');
                    if ("=" !== p) throw Error('Expected "=" but "' + p + '" found.');
                    if (n.operator = f + "=", t++, y(), i = "", n.valueType = "string", '"' === p) i = g('"', r); else if ("'" === p) i = g("'", c); else if (h && "$" === p) t++, 
                    i = d(), n.valueType = "substitute"; else {
                        for (;m > t && "]" !== p; ) i += p, t++, p = e.charAt(t);
                        i = i.trim();
                    }
                    if (y(), t >= m) throw Error('Expected "]" but end of file reached.');
                    if ("]" !== p) throw Error('Expected "]" but "' + p + '" found.');
                    t++, n.value = i;
                }
                C = C || {}, (C.attrs = C.attrs || []).push(n);
            } else {
                if (":" !== p) break;
                if (t++, E = d(), v = {
                    name: E
                }, "(" === p) {
                    if (t++, A = "", y(), "selector" === s[E]) v.valueType = "selector", A = this.parseSelector(); else {
                        if (v.valueType = "string", '"' === p) A = g('"', r); else if ("'" === p) A = g("'", c); else if (h && "$" === p) t++, 
                        A = d(), v.valueType = "substitute"; else {
                            for (;m > t && ")" !== p; ) A += p, t++, p = e.charAt(t);
                            A = A.trim();
                        }
                        y();
                    }
                    if (t >= m) throw Error('Expected ")" but end of file reached.');
                    if (")" !== p) throw Error('Expected ")" but "' + p + '" found.');
                    t++, v.value = A;
                }
                C = C || {}, (C.pseudos = C.pseudos || []).push(v);
            }
            return C;
        }, this;
    }, e.prototype.parse = function(e) {
        var r;
        return r = new t(e, 0, this.pseudos, this.attrEqualityMods, this.ruleNestingOperators, this.substitutesEnabled), 
        r.parse();
    }, e.prototype.escapeIdentifier = function(e) {
        var t, r, n, o, a, u, l;
        for (l = "", o = 0, a = e.length; a > o; ) {
            if (t = e.charAt(o), i[t]) l += "\\" + t; else if (u = s[t]) l += u; else if ((r = t.charCodeAt(0)) && (32 > r || r > 126)) {
                if (55296 === (63488 & r)) {
                    if (n = e.charCodeAt(o++), 55296 !== (64512 & r) || 56320 !== (64512 & n)) throw Error("UCS-2(decode): illegal sequence");
                    r = ((1023 & r) << 10) + (1023 & n) + 65536;
                }
                l += "\\" + r.toString(16) + " ";
            } else l += t;
            o++;
        }
        return l;
    }, e.prototype.escapeStr = function(e) {
        var t, r, n, s, i;
        for (i = "", r = 0, n = e.length; n > r; ) t = e.charAt(r), '"' === t ? t = '\\"' : "\\" === t ? t = "\\\\" : (s = f[t]) && (t = s), 
        i += t, r++;
        return '"' + i + '"';
    }, e.prototype.render = function(e) {
        var t, r = this;
        return (t = function(e) {
            var n, s, i;
            switch (i = "", e.type) {
              case "ruleSet":
                for (n = e.rule, s = []; n; ) n.nestingOperator && s.push(n.nestingOperator), s.push(t(n)), 
                n = n.rule;
                i = s.join(" ");
                break;

              case "selectors":
                i = e.selectors.map(t).join(", ");
                break;

              case "rule":
                e.tagName && (i = "*" === e.tagName ? "*" : r.escapeIdentifier(e.tagName)), e.id && (i += "#" + r.escapeIdentifier(e.id)), 
                e.classNames && (i += e.classNames.map(function(e) {
                    return "." + r.escapeIdentifier(e);
                }).join("")), e.attrs && (i += e.attrs.map(function(e) {
                    return e.operator ? "substitute" === e.valueType ? "[" + r.escapeIdentifier(e.name) + e.operator + "$" + e.value + "]" : "[" + r.escapeIdentifier(e.name) + e.operator + r.escapeStr(e.value) + "]" : "[" + r.escapeIdentifier(e.name) + "]";
                }).join("")), e.pseudos && (i += e.pseudos.map(function(e) {
                    return e.valueType ? "selector" === e.valueType ? ":" + r.escapeIdentifier(e.name) + "(" + t(e.value) + ")" : "substitute" === e.valueType ? ":" + r.escapeIdentifier(e.name) + "($" + e.value + ")" : ":" + r.escapeIdentifier(e.name) + "(" + r.escapeStr(e.value) + ")" : ":" + r.escapeIdentifier(e.name);
                }).join(""));
                break;

              default:
                throw Error('Unknown entity type: "' + e.type(0/0));
            }
            return i;
        })(e);
    }, e;
}), define("TestLocation", [ "require", "react-router" ], function(e) {
    function t(e) {
        this.history = e || [], this.listeners = [], this.updateHistoryLength();
    }
    var r = e("react-router");
    return t.prototype = {
        needsDOM: !1,
        updateHistoryLength: function() {
            r.History.length = this.history.length;
        },
        notifyChange: function(e) {
            for (var t = 0, r = this.listeners.length; r > t; ++t) this.listeners[t].call(this, {
                path: this.getCurrentPath(),
                type: e
            });
        },
        addChangeListener: function(e) {
            this.listeners.push(e);
        },
        removeChangeListener: function(e) {
            this.listeners = this.listeners.filter(function(t) {
                return t !== e;
            });
        },
        push: function(e) {
            this.history.push(e), this.updateHistoryLength(), this.notifyChange("push");
        },
        replace: function(e) {
            this.history[this.history.length - 1] = e, this.notifyChange("replace");
        },
        pop: function() {
            this.history.pop(), this.updateHistoryLength(), this.notifyChange("pop");
        },
        getCurrentPath: function() {
            return this.history[this.history.length - 1];
        },
        toString: function() {
            return "<TestLocation>";
        }
    }, t;
}), define("ExpandedTestUtils", [ "require", "react", "react-router", "lodash", "CssSelectorParser", "TestLocation" ], function(e) {
    "use strict";
    function t(e) {
        var t = new c(), r = t.parse(e);
        if ("ruleSet" !== r.type) throw new Exception("Cannot currently parse multiple rules. You must only provide a single CSS selector.");
        return r;
    }
    function r(e) {
        if (e.pseudos) throw new Exception("Pseudo selectors are currently not available. They also don't make sense in React trees.");
        if (e.nestingOperator || e.attrs) throw new Exception("Nesting operators are currently not supported.");
    }
    function n(e, t, i) {
        var o = l.findAllInRenderedTree(e, s(e, t, i)), a = t.rule;
        if (a) {
            var u = [];
            r(a);
            for (var c = 0; c < o.length; c++) u = u.concat(n(o[c], a, !0));
            return u;
        }
        return o;
    }
    function s(e, t, r) {
        return function(n) {
            if (r && n === e) return !1;
            var s = n.props.className, i = n.tagName;
            if (t.tagName && (!i || t.tagName.toLowerCase() !== i.toLowerCase())) return !1;
            if (t.classNames) {
                if (!s) return !1;
                for (var o = 0; o < t.classNames.length; o++) if (-1 === (" " + s + " ").indexOf(" " + t.classNames[o] + " ")) return !1;
            }
            return !0;
        };
    }
    var i = e("react"), o = e("react-router"), a = e("lodash"), u = o.Route, l = i.addons.TestUtils, c = e("CssSelectorParser"), f = e("TestLocation"), h = i.createElement;
    return {
        mockReactComponent: function(e, t) {
            if ("string" == typeof e) {
                var r = {};
                r[e] = t || {}, e = r;
            }
            var n = a.keys(e);
            return spyOn(i, "createElement").and.callFake(function() {
                var t = Array.prototype.slice.call(arguments), r = t[0];
                return r && r.displayName && n.indexOf(r.displayName) > -1 && (t[0] = "div", t[1] = t[1] ? a.assign(t[1], e[r.displayName]) : e[r.displayName]), 
                h.apply(i, t);
            });
        },
        getRouterComponent: function(e, t, r) {
            var n, s = document.createElement("div"), a = i.createElement(u, {
                name: r,
                handler: e
            }), c = new f([ "/" + r ]);
            return t = t || {}, o.run(a, c, function(r) {
                var o = i.render(i.createElement(r, i.__spread({}, t)), s);
                n = l.findRenderedComponentWithType(o, e);
            }), n;
        },
        scryRenderedDOMComponentsWithSelector: function(e, s) {
            var i = t(s), o = i.rule;
            return r(o), n(e, o);
        },
        findRenderedDOMComponentWithSelector: function(e, t) {
            var r = this.scryRenderedDOMComponentsWithSelector(e, t);
            if (1 !== r.length) throw new Error("Did not find exactly one match (found: " + r.length + ") for selector: " + t);
            return r[0];
        },
        findComponentCountWithClassname: function(e, t, r) {
            r || 0 === r || (r = 1);
            var n = l.scryRenderedDOMComponentsWithClass(e, t);
            if (n.length === r) return !0;
            throw new Error("Expected to find " + r + ' elements with class "' + t + '", but instead found ' + n.length);
        },
        findComponentCountWithSelector: function(e, t, r) {
            r || 0 === r || (r = 1);
            var n = this.scryRenderedDOMComponentsWithSelector(e, t);
            if (n.length === r) return !0;
            throw new Error("Expected to find " + r + ' elements with selector "' + t + '", but instead found ' + n.length);
        }
    };
});